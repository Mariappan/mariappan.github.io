{"version":3,"sources":["webpack:///./src/templates/notes.js"],"names":["Notes","data","pageContext","notes","nextPagePath","previousPagePath","allMarkdownRemark","edges","map","node","id","autoExcerpt","excerpt","frontmatter","title","date","path","author","coverImage","tags","key","propTypes","PropTypes","object","isRequired","shape","string","postsQuery"],"mappings":"2FAAA,oIAOMA,EAAQ,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,KAA4D,IAAtDC,YAESC,GAF6C,EAAvCC,aAAuC,EAAzBC,iBAG9CJ,EADFK,kBAAqBC,OAGvB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACGJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEVC,EAWED,EAXFC,GACSC,EAUPF,EAVFG,QAHqB,EAanBH,EATFI,YACEC,EALmB,EAKnBA,MACAC,EANmB,EAMnBA,KACAC,EAPmB,EAOnBA,KACAC,EARmB,EAQnBA,OACAC,EATmB,EASnBA,WACAN,EAVmB,EAUnBA,QACAO,EAXmB,EAWnBA,KAIJ,OACE,kBAAC,IAAD,CACEC,IAAKV,EACLI,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,WAAYA,EACZC,KAAMA,EACNP,QAASA,GAAWD,UASlCX,EAAMqB,UAAY,CAChBpB,KAAMqB,IAAUC,OAAOC,WACvBtB,YAAaoB,IAAUG,MAAM,CAC3BrB,aAAckB,IAAUI,OACxBrB,iBAAkBiB,IAAUI,UAIzB,IAAMC,EAAU,YAiCR3B","file":"component---src-templates-notes-js-4d9fa82934880a185837.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\n\nconst Notes = ({ data, pageContext: { nextPagePath, previousPagePath } }) => {\n  const {\n    allMarkdownRemark: { edges: notes },\n  } = data\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        {notes.map(({ node }) => {\n          const {\n            id,\n            excerpt: autoExcerpt,\n            frontmatter: {\n              title,\n              date,\n              path,\n              author,\n              coverImage,\n              excerpt,\n              tags,\n            },\n          } = node\n\n          return (\n            <Post\n              key={id}\n              title={title}\n              date={date}\n              path={path}\n              author={author}\n              coverImage={coverImage}\n              tags={tags}\n              excerpt={excerpt || autoExcerpt}\n            />\n          )\n        })}\n      </Layout>\n    </>\n  )\n}\n\nNotes.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    nextPagePath: PropTypes.string,\n    previousPagePath: PropTypes.string,\n  }),\n}\n\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//notes//\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            path\n            author\n            excerpt\n            tags\n            coverImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Notes\n"],"sourceRoot":""}